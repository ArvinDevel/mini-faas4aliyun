// Protocol for nodeservice.

syntax = "proto3";

package nodeservoceproto;

service NodeService {
    rpc CreateContainer (CreateContainerRequest) returns (CreateContainerReply) {
    }
    rpc RemoveContainer (RemoveContainerRequest) returns (RemoveContainerReply) {
    }
    rpc InvokeFunction (InvokeFunctionRequest) returns (stream InvokeFunctionReply) {
    }
    rpc GetStats (GetStatsRequest) returns (GetStatsReply) {
    }
}

message FunctionMeta {
    string function_name = 1;
    string handler = 2;
    int32 timeout = 3;
    int64 container_memory_in_bytes = 4;
}

message CreateContainerRequest {
    string name = 1; // container name
    FunctionMeta function_meta = 2;
    string request_id = 3;
}

message CreateContainerReply {
    string container_id = 1;
}

message RemoveContainerRequest {
    string container_id = 1; // container name
}

message RemoveContainerReply {
}

message FunctionParam {
    string name = 1;
    bytes event = 2;
    string request_id = 3;
    int32 timeout_in_secs = 4;
}

message InvokeFunctionRequest {
    string container_id = 1;
    FunctionParam function = 2;
}

message InvokeFunctionReply {
    bytes body = 1;

    message Header {
        bytes error = 1;
        bool handled = 2;
        string status_code = 3;
        message Value {
            repeated string items = 1;
        }
        map<string, Value> headers = 4;
        int64 duration_in_nanos = 5;
        int64 max_mem_usage_in_bytes = 6;
        string functionLog = 7;
    }

    message Footer {
        int64 duration_in_nano_secs = 1;
        string invoke_exception = 2;
        string error = 3;
    }

    Header header = 2;
    Footer footer = 3;
}

message NodeStats {
    int64 total_memory_in_bytes = 1;
    int64 used_memory_in_bytes = 2;
    int64 cpu_usage_pct = 3;
    int64 disk_total_in_bytes = 4;
    int64 disk_avail_in_bytes = 5;
    int64 disk_total_inodes = 6;
    int64 disk_free_inodes = 7;
}

message ContainerStats {
    string container_id = 1;
    int64 total_memory_in_bytes = 2;
    int64 used_memory_in_bytes = 3;
    int64 cpu_usage_pct = 4;
}

message GetStatsRequest {
}

message GetStatsReply {
    NodeStats node_stats = 1;
    repeated ContainerStats container_stats_list = 2;
    string live_id = 3;
    string version = 4;
    string state = 5;
}

